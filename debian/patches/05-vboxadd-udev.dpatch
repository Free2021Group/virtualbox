#!/bin/sh /usr/share/dpatch/dpatch-run
## 06-vboxadd-udev.dpatch by Michael Meskes <meskes@debian.org>
## basic idea taken from http://blino.org/blog/mandriva/kernel
##
## DP: Make vboxadd module register /dev/vboxadd correctly.

@DPATCH@

diff -Naurp virtualbox-ose-1.6.0-dfsg.orig/src/VBox/Additions/linux/module/vboxmod.c virtualbox-ose-1.6.0-dfsg/src/VBox/Additions/linux/module/vboxmod.c
--- virtualbox-ose-1.6.0-dfsg.orig/src/VBox/Additions/linux/module/vboxmod.c	2008-04-30 14:05:58.000000000 +0000
+++ virtualbox-ose-1.6.0-dfsg/src/VBox/Additions/linux/module/vboxmod.c	2008-05-09 09:26:26.000000000 +0000
@@ -71,6 +71,7 @@ do { \
 #include <VBox/VBoxDev.h>
 #include <iprt/asm.h>
 #include <iprt/assert.h>
+#include <linux/miscdevice.h>
 
 #define xstr(s) str(s)
 #define str(s) #s
@@ -582,6 +583,13 @@ static struct file_operations vbox_fops 
     .llseek  = no_llseek
 };
 
+static struct miscdevice vbox_dev =
+{
+    minor:      MISC_DYNAMIC_MINOR,
+    name:       "vboxadd",
+    fops:       &vbox_fops,
+};
+
 #ifndef IRQ_RETVAL
 /* interrupt handlers in 2.4 kernels don't return anything */
 # define irqreturn_t void
@@ -851,17 +859,22 @@ static __init int init(void)
     LogRel(("Starting VirtualBox version %s Guest Additions\n",
             VBOX_VERSION_STRING));
     /* register a character device */
-    err = register_chrdev(vbox_major, "vboxadd", &vbox_fops);
-    if (err < 0 || ((vbox_major & err) || (!vbox_major && !err)))
+    if (vbox_major > 0)
     {
-        LogRelFunc(("register_chrdev failed: vbox_major: %d, err = %d\n",
-                     vbox_major, err));
-        PCI_DEV_PUT(pcidev);
-        return -ENODEV;
+	err = register_chrdev(vbox_major, "vboxadd", &vbox_fops);
+	if (err < 0 || ((vbox_major & err) || (!vbox_major && !err)))
+	{
+	    LogRelFunc(("register_chrdev failed: vbox_major: %d, err = %d\n",
+		     vbox_major, err));
+	    PCI_DEV_PUT(pcidev);
+	    return -ENODEV;
+	}
+	/* if no major code was set, take the return value */
+	if (!vbox_major)
+	    vbox_major = err;
     }
-    /* if no major code was set, take the return value */
-    if (!vbox_major)
-        vbox_major = err;
+    else
+	err = misc_register(&vbox_dev);
 
     /* allocate and initialize device extension */
     vboxDev = kmalloc(sizeof(*vboxDev), GFP_KERNEL);
@@ -1029,7 +1042,10 @@ static __init int init(void)
 fail:
     PCI_DEV_PUT(pcidev);
     free_resources();
-    unregister_chrdev(vbox_major, "vboxadd");
+    if (vbox_major > 0)
+	unregister_chrdev(vbox_major, "vboxadd");
+    else
+    	misc_deregister(&vbox_dev);
     return err;
 }
 
@@ -1039,7 +1055,10 @@ fail:
  */
 static __exit void fini(void)
 {
-    unregister_chrdev(vbox_major, "vboxadd");
+    if (vbox_major > 0)
+	unregister_chrdev(vbox_major, "vboxadd");
+    else
+	misc_deregister(&vbox_dev);
     free_resources();
     vboxadd_cmc_fini ();
 }

#! /bin/sh /usr/share/dpatch/dpatch-run
## 22-no-static-libstdcpp.dpatch by Lubomir Rintel <lkundrak@v3.sk>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: Do not include statically linked libstdc++. Not a good idea if we don't need
## DP: to be binary-compatible across exotic distribution. Doesn't work with trunk
## DP: glibc heading towards 2.11 anyways. Static linking is not really supported
## DP: anyways.

@DPATCH@
diff -urNad virtualbox-ose-3.0.8-dfsg~/src/VBox/Additions/x11/VBoxClient/Makefile.kmk virtualbox-ose-3.0.8-dfsg/src/VBox/Additions/x11/VBoxClient/Makefile.kmk
--- virtualbox-ose-3.0.8-dfsg~/src/VBox/Additions/x11/VBoxClient/Makefile.kmk	2009-10-07 11:27:13.000000000 +0200
+++ virtualbox-ose-3.0.8-dfsg/src/VBox/Additions/x11/VBoxClient/Makefile.kmk	2009-10-07 18:44:29.962989537 +0200
@@ -62,20 +62,6 @@
 	Xext Xmu
 endif
 
-#
-# Link aginst libstdc++.a. (http://www.trilithium.com/johan/2005/06/static-libstdc/).
-# (It would've been preferred to avoid features depending on libstdc++, of course...)
-#
-# Actually, this is darn annoying and will *NOT* be tolerated for any new code!
-#
-VBoxClient_LIBPATH  += $(PATH_VBoxClient)
-VBoxClient_ORDERDEPS = $(PATH_VBoxClient)/libstdc++.a
-VBoxClient_CLEAN     = $(PATH_VBoxClient)/libstdc++.a
-$$(PATH_VBoxClient)/libstdc++.a:
-	$(call MSG_L1,Forcing static libstdc++)
-	$(QUIET)$(MKDIR) -p $(@D)
-	$(QUIET)$(LN_EXT) -sf `$(TOOL_$(VBOX_GCC_TOOL)_CXX) $(TEMPLATE_VBOXGUESTR3CPPEXE_CXXFLAGS.$(KBUILD_TARGET_ARCH)) -print-file-name=libstdc++.a` $@ \
-	     || $(CP_EXT) -f  `$(TOOL_$(VBOX_GCC_TOOL)_CXX) $(TEMPLATE_VBOXGUESTR3CPPEXE_CXXFLAGS.$(KBUILD_TARGET_ARCH)) -print-file-name=libstdc++.a` $@
 
 ifdef VBOX_X11_SEAMLESS_GUEST
  if defined(VBOX_WITH_TESTCASES) && !defined(VBOX_ONLY_ADDITIONS) && !defined(VBOX_ONLY_SDK)

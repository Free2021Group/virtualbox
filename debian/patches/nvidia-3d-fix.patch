--- virtualbox-5.2.6-dfsg.orig/src/VBox/HostServices/SharedOpenGL/render/renderspu_glx.c
+++ virtualbox-5.2.6-dfsg/src/VBox/HostServices/SharedOpenGL/render/renderspu_glx.c
@@ -44,6 +44,7 @@ typedef struct
 #define WINDOW_NAME window->title
 
 static Bool WindowExistsFlag;
+static Bool CrRenderForcePresentMainThread = True;
 
 static int
 WindowExistsErrorHandler( Display *dpy, XErrorEvent *xerr )
@@ -1114,6 +1115,15 @@ createWindow( VisualInfo *visual, GLbool
         AssertRC(rc);
     }
 
+    /*
+     * Runtime CR_RENDER_FORCE_PRESENT_MAIN_THREAD flag
+     */
+    const char *pEnvCrRenderForcePresentMainThread = crGetenv("CR_RENDER_FORCE_PRESENT_MAIN_THREAD");
+    if (pEnvCrRenderForcePresentMainThread != NULL)
+    {
+        CrRenderForcePresentMainThread = crStrToInt(pEnvCrRenderForcePresentMainThread) != 0 ? True : False;
+    }
+
     return GL_TRUE;
 }
 
@@ -1924,25 +1934,25 @@ renderspu_SystemShowWindow( WindowInfo *
     }
 }
 
-#define CR_RENDER_FORCE_PRESENT_MAIN_THREAD
-
 void renderspu_SystemVBoxPresentComposition( WindowInfo *window, const struct VBOXVR_SCR_COMPOSITOR_ENTRY *pChangedEntry )
 {
     /* the CR_RENDER_FORCE_PRESENT_MAIN_THREAD is actually inherited from cocoa backend impl,
      * here it forces rendering in WinCmd thread rather than a Main thread.
      * it is used for debugging only in any way actually.
      * @todo: change to some more generic macro name */
-#ifndef CR_RENDER_FORCE_PRESENT_MAIN_THREAD
+    int rc = VERR_SEM_BUSY;
     const struct VBOXVR_SCR_COMPOSITOR *pCompositor;
-    /* we do not want to be blocked with the GUI thread here, so only draw her eif we are really able to do that w/o bllocking */
-    int rc = renderspuVBoxCompositorTryAcquire(window, &pCompositor);
+    if (!CrRenderForcePresentMainThread)
+    {
+        /* we do not want to be blocked with the GUI thread here, so only draw her eif we are really able to do that w/o bllocking */
+        rc = renderspuVBoxCompositorTryAcquire(window, &pCompositor);
+    }
     if (RT_SUCCESS(rc))
     {
-        renderspuVBoxPresentCompositionGeneric(window, pCompositor, pChangedEntry, 0, false);
-        renderspuVBoxCompositorRelease(window);
+            renderspuVBoxPresentCompositionGeneric(window, pCompositor, pChangedEntry, 0, false);
+            renderspuVBoxCompositorRelease(window);
     }
     else if (rc == VERR_SEM_BUSY)
-#endif
     {
         Status status;
         XEvent event;
@@ -1961,13 +1971,11 @@ void renderspu_SystemVBoxPresentComposit
         }
         XFlush(render_spu.pCommunicationDisplay);
     }
-#ifndef CR_RENDER_FORCE_PRESENT_MAIN_THREAD
     else
     {
         /* this is somewhat we do not expect */
         WARN(("renderspuVBoxCompositorTryAcquire failed rc %d", rc));
     }
-#endif
 }
 
 static void
